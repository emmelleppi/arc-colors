/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useCallback, useState } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'
import { useWheel } from './store'
import Screen from "./Screen"

function Cylinder(props) {
  const [color, setColor] = useState(() => Math.round(4 * Math.random()))
  const palette = useWheel((s) => s.palette)
  const handleClick = useCallback(
    (e) => {
      e.stopPropagation()
      setColor((s) => (s + 1) % 5)
    },
    [setColor]
  )
  return (
    <mesh castShadow receiveShadow onClick={handleClick} {...props}>
      <cylinderBufferGeometry args={[0.146,0.146,2,32,4]} />
      <meshPhysicalMaterial metalness={0.8} roughness={1} color={palette[color]} />
    </mesh>
  )
}

export default function Model(props) {
  const { nodes, materials } = useGLTF('/Color3.gltf')

  return (
    <group {...props} dispose={null}>
      <group position={[-0, 1.09, 0.25]} >
        {new Array(36).fill().map((_, index) => (
          <Cylinder
            key={`0${index}`}
            position={[0, (index%6)/3.4, Math.floor(index/6)/3.4]}
            rotation={[0, 0, -Math.PI / 2]}
          />
        ))}
      </group>
      <Screen />
      <mesh receiveShadow castShadow material={materials.black} geometry={nodes.Cube.geometry} position={[0, 1, 0]} rotation-x={Math.PI/2} material-envMapIntensity={0.5}/>
    </group>
  )
}

useGLTF.preload('/Color.gltf')
