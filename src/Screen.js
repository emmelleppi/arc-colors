/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'
import { useSpring, a } from '@react-spring/three'
import { useWheel } from './store'

export default function Screen() {
  const { nodes, materials } = useGLTF('/Screen.gltf')
  const wheelOpen = useWheel((s) => s.wheelOpen)
  const [localOpen, setLocalOpen] = useState(wheelOpen)

  const springRef = useRef()
  const { posX } = useSpring({
    ref: springRef,
    posX: 0,
  })

  useEffect(() => {
    springRef.current.start({
      posX: wheelOpen ? 6 : 0,
      delay: wheelOpen ? 0 : 1500,
      onRest: () => setLocalOpen(true)
    })
  }, [localOpen, setLocalOpen, wheelOpen])

  return (
      <group position-y={1} dispose={null} >
        <mesh material={materials.Material} material-color="black" geometry={nodes.Slice001.geometry} position={[0.8, 0.39, -0.91]} material-transparent={true} />
        <a.mesh receiveShadow castShadow geometry={nodes.Slice.geometry} renderOrder={1} position-x={posX} >
          <meshPhysicalMaterial transmission={2} metalness={0.2} clearcoat={1} roughness={0} transparent color="white" />
        </a.mesh>
      </group>
  )
}

useGLTF.preload('/Screen.gltf')
